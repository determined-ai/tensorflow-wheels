diff --git a/tensorflow/tools/ci_build/builds/pip_new.sh b/tensorflow/tools/ci_build/builds/pip_new.sh
index e3f375ed..e033a278 100755
--- a/tensorflow/tools/ci_build/builds/pip_new.sh
+++ b/tensorflow/tools/ci_build/builds/pip_new.sh
@@ -629,39 +629,3 @@ AUDITED_WHL_NAME="${WHL_DIR}"/$(echo "${WHL_BASE_NAME//linux/manylinux2010}")
 
 # Print the size of the wheel file.
 echo "Size of the PIP wheel file built: $(ls -l ${WHL_PATH} | awk '{print $5}')"
-
-# Run tests (if any is specified).
-run_all_tests
-
-for WHL_PATH in $(ls ${PIP_WHL_DIR}/${PROJECT_NAME}*.whl); do
-  if [[ "${TF_NEED_CUDA}" -eq "1" ]]; then
-    # Copy and rename for gpu manylinux as we do not want auditwheel to package in libcudart.so
-    WHL_PATH=${AUDITED_WHL_NAME}
-    cp "${WHL_DIR}"/"${WHL_BASE_NAME}" "${WHL_PATH}"
-    echo "Copied manylinux2010 wheel file at ${WHL_PATH}"
-  else
-    if [[ ${OS_TYPE} == "ubuntu" ]]; then
-      # Avoid Python3.6 abnormality by installing auditwheel here.
-      set +e
-      pip3 show auditwheel || "pip${PY_MAJOR_MINOR_VER}" show auditwheel
-      pip3 install auditwheel==2.0.0 || "pip${PY_MAJOR_MINOR_VER}" install auditwheel==2.0.0
-      sudo pip3 install auditwheel==2.0.0 || \
-        sudo "pip${PY_MAJOR_MINOR_VER}" install auditwheel==2.0.0
-      set -e
-      auditwheel --version
-
-      # Repair the wheels for cpu manylinux2010
-      echo "auditwheel repairing ${WHL_PATH}"
-      auditwheel repair --plat manylinux2010_x86_64 -w "${WHL_DIR}" "${WHL_PATH}"
-
-      if [[ -f ${AUDITED_WHL_NAME} ]]; then
-        WHL_PATH=${AUDITED_WHL_NAME}
-        echo "Repaired manylinux2010 wheel file at: ${WHL_PATH}"
-      else
-        die "WARNING: Cannot find repaired wheel."
-      fi
-    fi
-  fi
-done
-
-echo "EOF: Successfully ran pip_new.sh"
diff --git a/tensorflow/tools/ci_build/release/common.sh b/tensorflow/tools/ci_build/release/common.sh
index 6f0ab58b..17a5f5cc 100644
--- a/tensorflow/tools/ci_build/release/common.sh
+++ b/tensorflow/tools/ci_build/release/common.sh
@@ -172,15 +172,14 @@ function install_ubuntu_16_pip_deps {
   "${PIP_CMD}" install --user --upgrade attrs
   "${PIP_CMD}" install keras_applications==1.0.8 --no-deps --user
   "${PIP_CMD}" install keras_preprocessing==1.1.0 --no-deps --user
-  "${PIP_CMD}" install numpy==1.14.5 --user
   "${PIP_CMD}" install --user --upgrade "future>=0.17.1"
   "${PIP_CMD}" install gast==0.2.2 --user
   "${PIP_CMD}" install h5py==2.8.0 --user
   "${PIP_CMD}" install six==1.12.0 --user
   "${PIP_CMD}" install grpcio --user
   "${PIP_CMD}" install portpicker --user
-  "${PIP_CMD}" install scipy --user
-  "${PIP_CMD}" install scikit-learn --user
+  "${PIP_CMD}" install scipy 'numpy<1.19.0' --user
+  "${PIP_CMD}" install scikit-learn 'numpy<1.19.0' --user
   "${PIP_CMD}" install --user --upgrade tf-estimator-nightly==1.14.0.dev2019072801
   "${PIP_CMD}" install --user --upgrade tb-nightly==2.1.0a20190927
   # ===================================================================
diff --git a/tensorflow/tools/ci_build/release/ubuntu_16/gpu_py37_full/pip.sh b/tensorflow/tools/ci_build/release/ubuntu_16/gpu_py37_full/pip.sh
index 60a1e037..64eb6df2 100644
--- a/tensorflow/tools/ci_build/release/ubuntu_16/gpu_py37_full/pip.sh
+++ b/tensorflow/tools/ci_build/release/ubuntu_16/gpu_py37_full/pip.sh
@@ -34,7 +34,7 @@ export TF_NEED_S3=1
 export TF_NEED_CUDA=1
 export TF_CUDA_VERSION=10
 export TF_CUDNN_VERSION=7
-export TF_NEED_TENSORRT=1
+export TF_NEED_TENSORRT=0
 export TENSORRT_INSTALL_PATH=/usr/local/tensorrt
 export CC_OPT_FLAGS='-mavx'
 export PYTHON_BIN_PATH=$(which ${TF_PYTHON_VERSION})
@@ -50,7 +50,7 @@ source tensorflow/tools/ci_build/build_scripts/PRESUBMIT_BUILD_TARGETS.sh
 # Export optional variables for running pip.sh
 export TF_TEST_FILTER_TAGS='gpu,requires-gpu,-no_gpu,-nogpu,-no_oss,-oss_serial,-no_oss_py37'
 export TF_BUILD_FLAGS="--config=opt --config=cuda --distinct_host_configuration=false \
---action_env=TF_CUDA_VERSION --action_env=TF_CUDNN_VERSION --crosstool_top=//third_party/toolchains/preconfig/ubuntu16.04/gcc7_manylinux2010-nvcc-cuda10.0:toolchain "
+--action_env=TF_CUDA_VERSION --action_env=TF_CUDNN_VERSION"
 export TF_TEST_FLAGS="--test_tag_filters=${TF_TEST_FILTER_TAGS} --build_tag_filters=${TF_TEST_FILTER_TAGS} \
 --distinct_host_configuration=false \
 --action_env=TF_CUDA_VERSION --action_env=TF_CUDNN_VERSION \
diff --git a/third_party/nccl/build_defs.bzl.tpl b/third_party/nccl/build_defs.bzl.tpl
index 57191398..5f5c3a10 100644
--- a/third_party/nccl/build_defs.bzl.tpl
+++ b/third_party/nccl/build_defs.bzl.tpl
@@ -113,7 +113,6 @@ def _device_link_impl(ctx):
             "--cmdline=--compile-only",
             "--link",
             "--compress-all",
-            "--bin2c-path=%s" % bin2c.dirname,
             "--create=%s" % tmp_fatbin.path,
             "--embedded-fatbin=%s" % fatbin_h.path,
         ] + images,
